# -*- coding: utf-8 -*-
"""Covid Statistical Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CQ9JLFUacBO3sOjS_-rYhHmV7LWUUyHi
"""

from google.colab import drive
drive.mount('/content/gdrive')

import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
import matplotlib.lines as mlines
import seaborn as sns

"""# **Statistical Analysis and Visualization**

#PM2.5

###Reading data
"""

df19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/2019.csv')
df20 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/2020.csv')

pre = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/pre.csv')
during = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/during.csv')
post = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/post.csv')

pre_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/2019_1.csv')
during_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/2019_2.csv')
post_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/2019_3.csv')

df19_copy = df19.copy()
df20_copy = df20.copy()

pre_copy = pre.copy()
during_copy = during.copy()
post_copy = post.copy()

pre_19_copy = pre_19.copy()
during_19_copy = during_19.copy()
post_19_copy = post_19.copy()

df19.index = df19['Date']
df20.index = df20['Date']
del df19['Date']
del df20['Date']

pre.index = pre['Date']
post.index = post['Date']
during.index = during['Date']
del pre['Date']
del post['Date']
del during['Date']

pre_19.index = pre_19['Date']
post_19.index = post_19['Date']
during_19.index = during_19['Date']
del pre_19['Date']
del post_19['Date']
del during_19['Date']

df19.head()

df20.head()

"""###Yearly - General Trend"""

plt.style.use("fivethirtyeight")
df19.plot(figsize=(25,10), linewidth = 2)
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.title('2019 - All Stations Yearly Data')
plt.legend(bbox_to_anchor=[1, 1.1])
plt.show()

df20.plot(figsize=(25,10), linewidth = 2)
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.legend(bbox_to_anchor=[1, 1.1])
plt.title('2020 - All Stations Yearly Data')
plt.show()

"""The values of PM2.5 concentration in air ranges from 0 to about 700.
For most of the stations in 2019, the values are at their minimum in the months of July to September, and has reached their maximum in the months of January, October, November and December.
In 2020, the months of March to June recorded comparitively lesser PM2.5 values than 2019, that can be accounted for an effect of the Covid lockdown.
In both years, there is a steep rise in PM2.5 value during Diwali, which was on 27 October 2019 and 14 November 2020.

###2019 vs 2020 - Phasewise
"""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('Pre Covid - Jan to March')
ax1.plot(pre_19.index, pre_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=45, labelsize=10)
ax2.plot(pre.index, pre, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""The trends of the pre covid period in 2020 and the same period in 2019 show no significant difference."""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('During Lockdown - March to May')
ax1.plot(during_19.index, during_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=45, labelsize=10)
ax2.plot(during.index, during, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""During the lockdown period, the PM2.5 values have dropped significantly. Concentration that reached 150-200 in 2019, stayed below 80-100 in the same days of 2020. Values in 2019 have reached 300, but in 2020, all stations except 3 have strictly stayed below the range of 150, which is a significant improvement."""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('Post Lockdown - June to Dec')
ax1.plot(post_19.index, post_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=90, labelsize=7)
ax2.plot(post.index, post, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=90, labelsize=7)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""•	Post lockdown, till the month of September in 2020, the PM2.5 values have been lesser than the values of the same days of 2019.
•	From October, there is a steep rise in PM2.5 figures, and we can infer that the effect of lockdown wore out beyond that. October onwards, we see the same trend in 2019 and 2020 values.
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,10))
fig.suptitle('2020')
ax1.plot(pre_19.index, pre_19, linewidth = 1)
ax1.set_title('Pre Covid - Jan to March')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=90, labelsize=9)

ax2.plot(during.index, during, linewidth = 1)
ax2.set_title('During Lockdown - March to May')
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=90, labelsize=9)

ax3.plot(post.index, post, linewidth = 1)
ax3.set_title('Post Lockdown - June to Dec')
ax3.set_xlabel("Date")
ax3.set_ylabel("Pollution level")
ax3.tick_params(labelrotation=90, labelsize=7)
plt.subplots_adjust(wspace=0.4, hspace=1.2)

"""•	In the pre-Covid days of 2020, the maximum values recorded almost touched 500. During lockdown, the values mostly stayed below 150. Post lockdown, the values stayed below 150 till September, then eventually rose after that and touched 700 in October.

###Areawise Analysis of Stations
"""

df19_copy['Date'] = df19_copy['Date'].apply(pd.Timestamp)
df20_copy['Date'] = df20_copy['Date'].apply(pd.Timestamp)
during_copy['Date'] = during_copy['Date'].apply(pd.Timestamp)
post_copy['Date'] = post_copy['Date'].apply(pd.Timestamp)

industrial = ['Alipur','Bawana','Jahangirpuri','Mundka','Najafgarh','Narela','Okhla Phase-2','Shadipur','Patparganj','Wazirpur']
residential = ['Anand Vihar','Ashok Vihar','Aya Nagar','Dwarka-Sector 8','IHBAS, Dilshad Garden','Nehru Nagar','Punjabi Bagh','R K Puram','Rohini','Vivek Vihar']
roads = ['Burari Crossing','CRRI Mathura Road','ITO','Lodhi Road','Mandir Marg','Pusa','Sri Aurobindo Marg']
others = ['Dr. Karni Singh Shooting Range','DTU','IGI Airport (T3)','Jawaharlal Nehru Stadium','Major Dhyan Chand National Stadium','North Campus, DU','NSIT Dwarka','Sirifort','Sonia Vihar']

"""#####Different areas during lockdown"""

fig, (ax1, ax2, ax3, ax4) = plt.subplots(4, figsize = (25,30))
fig.suptitle('Pollution levels in different areas During Lockdown', y=0.9)

for station in industrial:
  ax1.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Industrial Areas')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('Residential Areas')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax3.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Areas near Roads')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax4.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax4.set_title('Other Areas')
ax4.set_xlabel("Date")
ax4.set_ylabel("Pollution level")
ax4.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax4.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.2, hspace=0.4)

"""•	The overall PM2.5 levels have stayed uniformly low across all regions during lockdown (strictly below 150, except one or two exceptions), which is a remarkable improvement.

#####Industrial areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on Industrial areas', y=0.91)

for station in industrial:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Industrial areas', y=0.91)

for station in industrial:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in industrial:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	In industrial areas, the concentration of PM2.5 in air had almost halved during the days of lockdown, as compared to the same days of 2019.
•	For most of the lockdown period, the values stayed below 110, and for a brief period rose up to 170. Whereas for the same period in 2019, most of the values had exceeded 150 and even briefly reached 300.
•	In the post lockdown period of 2020, there is no significant difference in PM2.5 levels of the same period of 2019.

#####Residential areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on Residential areas', y=0.91)

for station in residential:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Residential areas', y=0.91)

for station in residential:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in residential:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	During lockdown in residential areas, the PM2.5 values were comparatively lesser than that period of 2019, but compared to other areas, the values were not significantly lower as expected.
•	Post lockdown too, the trends of PM2.5 concentration is mostly similar as 2019.

#####Areas near roads
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on areas near roads', y=0.91)

for station in roads:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Areas near Roads', y=0.91)

for station in roads:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in roads:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	For all stations located near roads, except ITO, the values had halved during lockdown as compared to 2019.
•	Post lockdown, the trends returned to the expected pattern as per 2019.

#####Other areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on other areas', y=0.91)

for station in others:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Other areas', y=0.91)

for station in others:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in others:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	For other areas, which include educational institutions and campuses, the airport, a water treatment plant, stadiums, etc. the values had halved during lockdown, as compared to that period of 2019.
•	Post lockdown, there isn’t much difference.

###Monthly Analysis

Mean
"""

df19_monthly_mean = df19_copy.set_index('Date').resample('M').mean()
df20_monthly_mean = df20_copy.set_index('Date').resample('M').mean()
during_monthly_mean = during_copy.set_index('Date').resample('M').mean()
post_monthly_mean = post_copy.set_index('Date').resample('M').mean()

pm25_monthly_mean = df20_monthly_mean.copy()

df19_monthly_mean

df20_monthly_mean

plt.figure(figsize=(25,10))
for station in residential:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='orange', s=100)
for station in others:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='yellow', s=100)
for station in industrial:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='red', s=70)
for station in roads:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='black', s=70)

for station in residential:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x',color='orange', s=50)
for station in others:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='yellow', s=40)
for station in industrial:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='red', s=40)
for station in roads:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='black', s=40)  

i = mlines.Line2D([], [], color='red', marker='o', ls='', label='industrial')
re = mlines.Line2D([], [], color='orange', marker='o', ls='', label='residential')
ro = mlines.Line2D([], [], color='black', marker='o', ls='', label='roads')
o = mlines.Line2D([], [], color='yellow', marker='o', ls='', label='others')
plt.legend(handles=[i, re, ro, o], bbox_to_anchor=(0.3,1))
plt.title('Monthly Mean Values of Stations')
plt.xlabel('Months')
plt.ylabel('Pollution Level')
plt.show()

"""•	From the monthly mean values of 2019 and 2020, it is seen that January, October, November, December recorded very high PM2.5 concentrations. The rest of the months recorded comparatively lesser values, June, July and August recording the lowest.
•	The months of March to August recorded lesser PM2.5 values in 2020 than 2019.
•	In each month, higher PM2.5 concentrations were recorded in industrial areas than areas near roads and the areas in others category.

###Analysis of Maximum and Minimum Months
"""

df19_monthly_max = df19_copy.set_index('Date').resample('M').max()
df20_monthly_max = df20_copy.set_index('Date').resample('M').max()

df19_monthly_min = df19_copy.set_index('Date').resample('M').min()
df20_monthly_min = df20_copy.set_index('Date').resample('M').min()

df19_monthly_min['Mean'] = df19_monthly_min.mean(axis=1)
df19_monthly_max['Mean'] = df19_monthly_max.mean(axis=1)

df20_monthly_min['Mean'] = df20_monthly_min.mean(axis=1)
df20_monthly_max['Mean'] = df20_monthly_max.mean(axis=1)

df20_monthly_max.head()

df20_monthly_min.head()

fig, (ax1, ax2) = plt.subplots(2, figsize = (15,10))

colors1 = ['orange' if (s < max(df20_monthly_max['Mean'])) else 'red' for s in df20_monthly_max['Mean']]
colors2 = ['dodgerblue' if (s > min(df20_monthly_min['Mean'])) else 'silver' for s in df20_monthly_min['Mean']]

ax1.bar(df20_monthly_max.index, df20_monthly_max['Mean'], width=20, color=colors1)
ax1.bar(df19_monthly_max.index, df19_monthly_max['Mean'], width=20, color='orange')
ax1.set_xlabel('Months')
ax1.set_title('Maximum Range')
ax1.set_ylabel('Pollution level')

ax2.bar(df20_monthly_min.index, df20_monthly_min['Mean'], width=20, color=colors2)
ax2.bar(df19_monthly_min.index, df19_monthly_min['Mean'], width=20, color='dodgerblue')
ax2.set_xlabel('Months')
ax2.set_title('Minimum Range')
ax2.set_ylabel('Pollution level')

plt.subplots_adjust(wspace=0.2, hspace=0.4)
plt.show()

"""•	The maximum PM2.5 values recorded was in the month of September in 2020. The months September, October, November all recorded high PM2.5 concentrations.
•	The months June, July, August recorded comparatively less PM2.5 values with August recording minimum.
"""

max_20 = df20.loc['01-10-2020 00:00':'30-11-2020 00:00']
min_20 = df20.loc['01-07-2020 00:00':'31-08-2020 00:00']

plt.figure(figsize = (15,10))
ax = sns.heatmap(max_20, cmap='RdYlGn_r', robust=True, fmt='0.1f', 
                 annot=True, linewidths=0.1, annot_kws={'size':7})
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize=8)
plt.title('Oct-Nov 2020', fontdict={'fontsize':18}, pad=14)
plt.show()

plt.figure(figsize = (15,10))
ax = sns.heatmap(min_20, cmap='RdYlGn_r', robust=True, fmt='0.1f', 
                 annot=True, linewidths=0.1, annot_kws={'size':7})
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize=8)
plt.title('Jul-Aug 2020', fontdict={'fontsize':18}, pad=14)
plt.show()

"""###Seasonwise Analysis"""

plt.figure(figsize=(20,10))
plt.suptitle('PM2.5', size=15)

plt.subplot(2, 3, 1)
plt.title('Winter - 1 (Jan)')
ax = sns.heatmap(df20.loc['01-01-2020 00:00':'31-01-2020 00:00'], cmap='Greys')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 2)
plt.title('Spring (Feb-Mar)')
ax = sns.heatmap(df20.loc['01-02-2020 00:00':'31-03-2020 00:00'], cmap='Greys')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 3)
plt.title('Summer (Apr-Jun)')
ax = sns.heatmap(df20.loc['01-04-2020 00:00':'30-06-2020 00:00'], cmap='Greys')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 4)
plt.title('Monsoon (Jul-Sep)')
ax = sns.heatmap(df20.loc['01-07-2020 00:00':'30-09-2020 00:00'], cmap='Greys')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 5)
plt.title('Autumn (Oct-Nov)')
ax = sns.heatmap(df20.loc['01-10-2020 00:00':'30-11-2020 00:00'], cmap='Greys')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 6)
plt.title('Winter - 2 (Dec)')
ax = sns.heatmap(df20.loc['01-12-2020 00:00':'31-12-2020 00:00'], cmap='Greys')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplots_adjust(wspace=0.4, hspace=0.5)
plt.show()

"""•	PM2.5 values are maximum in the winter months (Jan and Dec) and early spring (Feb), and in a brief period during November.
•	The reason for the severe levels of PM2.5 in the air of Delhi NCR in the winter months is due to a weather phenomenon which results in low wind speed combined with a dip in temperature which leads to a ‘low mixing height’ and brings down the pollutants closer to ground, and seasonal crop burning in regions of Punjab and Haryana.
•	In November the severe level of PM2.5 is due to burning of firecrackers during Diwali.
•	The PM2.5 levels is much low in the summer months and even lower in monsoon months, due to rainfall, that settles the particulate matter in air.

#PM10

###Reading data
"""

df19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM10/2019.csv')
df20 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM10/2020.csv')

pre = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM10/pre.csv')
during = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM10/during.csv')
post = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM10/post.csv')

pre_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM10/2019_1.csv')
during_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM10/2019_2.csv')
post_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM10/2019_3.csv')

df19_copy = df19.copy()
df20_copy = df20.copy()

pre_copy = pre.copy()
during_copy = during.copy()
post_copy = post.copy()

pre_19_copy = pre_19.copy()
during_19_copy = during_19.copy()
post_19_copy = post_19.copy()

df19.index = df19['Date']
df20.index = df20['Date']
del df19['Date']
del df20['Date']

pre.index = pre['Date']
post.index = post['Date']
during.index = during['Date']
del pre['Date']
del post['Date']
del during['Date']

pre_19.index = pre_19['Date']
post_19.index = post_19['Date']
during_19.index = during_19['Date']
del pre_19['Date']
del post_19['Date']
del during_19['Date']

df19.head()

df20.head()

"""###Yearly - General Trend"""

plt.style.use("fivethirtyeight")
df19.plot(figsize=(25,10), linewidth = 2)
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.title('2019 - All Stations Yearly Data')
plt.legend(fontsize=10, bbox_to_anchor=[1, 1.1])
plt.show()

df20.plot(figsize=(25,10), linewidth = 2)
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.legend(bbox_to_anchor=[1, 1.1])
plt.title('2020 - All Stations Yearly Data')
plt.show()

"""The values of PM2.5 concentration in air ranges from 0 to about 700.
For most of the stations in 2019, the values are at their minimum in the months of July to September, and has reached their maximum in the months of January, October, November and December.
In 2020, the months of March to June recorded comparitively lesser PM2.5 values than 2019, that can be accounted for an effect of the Covid lockdown.
In both years, there is a steep rise in PM2.5 value during Diwali, which was on 27 October 2019 and 14 November 2020.

###2019 vs 2020 - Phasewise
"""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('Pre Covid - Jan to March')
ax1.plot(pre_19.index, pre_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=45, labelsize=10)
ax2.plot(pre.index, pre, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""The trends of the pre covid period in 2020 and the same period in 2019 show no significant difference."""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('During Lockdown - March to May')
ax1.plot(during_19.index, during_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=45, labelsize=10)
ax2.plot(during.index, during, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""During the lockdown period, the PM2.5 values have dropped significantly. Concentration that reached 150-200 in 2019, stayed below 80-100 in the same days of 2020. Values in 2019 have reached 300, but in 2020, all stations except 3 have strictly stayed below the range of 150, which is a significant improvement."""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('Post Lockdown - June to Dec')
ax1.plot(post_19.index, post_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=90, labelsize=7)
ax2.plot(post.index, post, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=90, labelsize=7)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""•	Post lockdown, till the month of September in 2020, the PM2.5 values have been lesser than the values of the same days of 2019.
•	From October, there is a steep rise in PM2.5 figures, and we can infer that the effect of lockdown wore out beyond that. October onwards, we see the same trend in 2019 and 2020 values.
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,10))
fig.suptitle('2020')
ax1.plot(pre_19.index, pre_19, linewidth = 1)
ax1.set_title('Pre Covid - Jan to March')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=90, labelsize=9)

ax2.plot(during.index, during, linewidth = 1)
ax2.set_title('During Lockdown - March to May')
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=90, labelsize=9)

ax3.plot(post.index, post, linewidth = 1)
ax3.set_title('Post Lockdown - June to Dec')
ax3.set_xlabel("Date")
ax3.set_ylabel("Pollution level")
ax3.tick_params(labelrotation=90, labelsize=7)
plt.subplots_adjust(wspace=0.4, hspace=1.2)

"""•	In the pre-Covid days of 2020, the maximum values recorded almost touched 500. During lockdown, the values mostly stayed below 150. Post lockdown, the values stayed below 150 till September, then eventually rose after that and touched 700 in October.

###Areawise Analysis of Stations
"""

df19_copy['Date'] = df19_copy['Date'].apply(pd.Timestamp)
df20_copy['Date'] = df20_copy['Date'].apply(pd.Timestamp)
during_copy['Date'] = during_copy['Date'].apply(pd.Timestamp)
post_copy['Date'] = post_copy['Date'].apply(pd.Timestamp)

industrial = ['Alipur','Bawana','Jahangirpuri','Mundka','Najafgarh','Narela','Okhla Phase-2','Shadipur','Patparganj','Wazirpur']
residential = ['Anand Vihar','Ashok Vihar','Aya Nagar','Dwarka-Sector 8','IHBAS, Dilshad Garden','Nehru Nagar','Punjabi Bagh','R K Puram','Rohini','Vivek Vihar']
roads = ['Burari Crossing','CRRI Mathura Road','ITO','Lodhi Road','Mandir Marg','Pusa','Sri Aurobindo Marg']
others = ['Dr. Karni Singh Shooting Range','DTU','IGI Airport (T3)','Jawaharlal Nehru Stadium','Major Dhyan Chand National Stadium','North Campus, DU','NSIT Dwarka','Sirifort','Sonia Vihar']

"""#####Different areas during lockdown"""

fig, (ax1, ax2, ax3, ax4) = plt.subplots(4, figsize = (25,30))
fig.suptitle('Pollution levels in different areas During Lockdown', y=0.9)

for station in industrial:
  ax1.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Industrial Areas')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('Residential Areas')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax3.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Areas near Roads')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax4.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax4.set_title('Other Areas')
ax4.set_xlabel("Date")
ax4.set_ylabel("Pollution level")
ax4.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax4.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.2, hspace=0.4)

"""•	The overall PM2.5 levels have stayed uniformly low across all regions during lockdown (strictly below 150, except one or two exceptions), which is a remarkable improvement.

#####Industrial areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on Industrial areas', y=0.91)

for station in industrial:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Industrial areas', y=0.91)

for station in industrial:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in industrial:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	In industrial areas, the concentration of PM2.5 in air had almost halved during the days of lockdown, as compared to the same days of 2019.
•	For most of the lockdown period, the values stayed below 110, and for a brief period rose up to 170. Whereas for the same period in 2019, most of the values had exceeded 150 and even briefly reached 300.
•	In the post lockdown period of 2020, there is no significant difference in PM2.5 levels of the same period of 2019.

#####Residential areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on Residential areas', y=0.91)

for station in residential:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Residential areas', y=0.91)

for station in residential:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in residential:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	During lockdown in residential areas, the PM2.5 values were comparatively lesser than that period of 2019, but compared to other areas, the values were not significantly lower as expected.
•	Post lockdown too, the trends of PM2.5 concentration is mostly similar as 2019.

#####Areas near roads
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on areas near roads', y=0.91)

for station in roads:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Areas near Roads', y=0.91)

for station in roads:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in roads:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	For all stations located near roads, except ITO, the values had halved during lockdown as compared to 2019.
•	Post lockdown, the trends returned to the expected pattern as per 2019.

#####Other areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on other areas', y=0.91)

for station in others:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Other areas', y=0.91)

for station in others:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in others:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	For other areas, which include educational institutions and campuses, the airport, a water treatment plant, stadiums, etc. the values had halved during lockdown, as compared to that period of 2019.
•	Post lockdown, there isn’t much difference.

###Monthly Analysis

Mean
"""

df19_monthly_mean = df19_copy.set_index('Date').resample('M').mean()
df20_monthly_mean = df20_copy.set_index('Date').resample('M').mean()
during_monthly_mean = during_copy.set_index('Date').resample('M').mean()
post_monthly_mean = post_copy.set_index('Date').resample('M').mean()

pm10_monthly_mean = df20_monthly_mean.copy()

df19_monthly_mean

df20_monthly_mean

plt.figure(figsize=(25,10))
for station in residential:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='orange', s=100)
for station in others:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='yellow', s=100)
for station in industrial:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='red', s=70)
for station in roads:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='black', s=70)

for station in residential:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x',color='orange', s=50)
for station in others:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='yellow', s=40)
for station in industrial:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='red', s=40)
for station in roads:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='black', s=40)  

i = mlines.Line2D([], [], color='red', marker='o', ls='', label='industrial')
re = mlines.Line2D([], [], color='orange', marker='o', ls='', label='residential')
ro = mlines.Line2D([], [], color='black', marker='o', ls='', label='roads')
o = mlines.Line2D([], [], color='yellow', marker='o', ls='', label='others')
plt.legend(handles=[i, re, ro, o], bbox_to_anchor=(0.3,1))
plt.title('Monthly Mean Values of Stations')
plt.xlabel('Months')
plt.ylabel('Pollution Level')
plt.show()

"""•	From the monthly mean values of 2019 and 2020, it is seen that January, October, November, December recorded very high PM2.5 concentrations. The rest of the months recorded comparatively lesser values, June, July and August recording the lowest.
•	The months of March to August recorded lesser PM2.5 values in 2020 than 2019.
•	In each month, higher PM2.5 concentrations were recorded in industrial areas than areas near roads and the areas in others category.

###Analysis of Maximum and Minimum Months
"""

df19_monthly_max = df19_copy.set_index('Date').resample('M').max()
df20_monthly_max = df20_copy.set_index('Date').resample('M').max()

df19_monthly_min = df19_copy.set_index('Date').resample('M').min()
df20_monthly_min = df20_copy.set_index('Date').resample('M').min()

df19_monthly_min['Mean'] = df19_monthly_min.mean(axis=1)
df19_monthly_max['Mean'] = df19_monthly_max.mean(axis=1)

df20_monthly_min['Mean'] = df20_monthly_min.mean(axis=1)
df20_monthly_max['Mean'] = df20_monthly_max.mean(axis=1)

df20_monthly_max.head()

df20_monthly_min.head()

fig, (ax1, ax2) = plt.subplots(2, figsize = (15,10))

colors1 = ['orange' if (s < max(df20_monthly_max['Mean'])) else 'red' for s in df20_monthly_max['Mean']]
colors2 = ['dodgerblue' if (s > min(df20_monthly_min['Mean'])) else 'silver' for s in df20_monthly_min['Mean']]

ax1.bar(df20_monthly_max.index, df20_monthly_max['Mean'], width=20, color=colors1)
ax1.bar(df19_monthly_max.index, df19_monthly_max['Mean'], width=20, color='orange')
ax1.set_xlabel('Months')
ax1.set_title('Maximum Range')
ax1.set_ylabel('Pollution level')

ax2.bar(df20_monthly_min.index, df20_monthly_min['Mean'], width=20, color=colors2)
ax2.bar(df19_monthly_min.index, df19_monthly_min['Mean'], width=20, color='dodgerblue')
ax2.set_xlabel('Months')
ax2.set_title('Minimum Range')
ax2.set_ylabel('Pollution level')

plt.subplots_adjust(wspace=0.2, hspace=0.4)
plt.show()

"""•	The maximum PM2.5 values recorded was in the month of September in 2020. The months September, October, November all recorded high PM2.5 concentrations.
•	The months June, July, August recorded comparatively less PM2.5 values with August recording minimum.
"""

max_20 = df20.loc['01-10-2020 00:00':'30-11-2020 00:00']
min_20 = df20.loc['01-07-2020 00:00':'31-08-2020 00:00']

plt.figure(figsize = (15,10))
ax = sns.heatmap(max_20, cmap='RdYlGn_r', robust=True, fmt='0.1f', 
                 annot=True, linewidths=0.1, annot_kws={'size':7})
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize=8)
plt.title('Oct-Nov 2020', fontdict={'fontsize':18}, pad=14)
plt.show()

plt.figure(figsize = (15,10))
ax = sns.heatmap(min_20, cmap='RdYlGn_r', robust=True, fmt='0.1f', 
                 annot=True, linewidths=0.1, annot_kws={'size':7})
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize=8)
plt.title('Jul-Aug 2020', fontdict={'fontsize':18}, pad=14)
plt.show()

"""###Seasonwise Analysis"""

plt.figure(figsize=(20,10))
plt.suptitle('PM10', size=15)

plt.subplot(2, 3, 1)
plt.title('Winter - 1 (Jan)')
ax = sns.heatmap(df20.loc['01-01-2020 00:00':'31-01-2020 00:00'], cmap='Greens')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 2)
plt.title('Spring (Feb-Mar)')
ax = sns.heatmap(df20.loc['01-02-2020 00:00':'31-03-2020 00:00'], cmap='Greens')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 3)
plt.title('Summer (Apr-Jun)')
ax = sns.heatmap(df20.loc['01-04-2020 00:00':'30-06-2020 00:00'], cmap='Greens')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 4)
plt.title('Monsoon (Jul-Sep)')
ax = sns.heatmap(df20.loc['01-07-2020 00:00':'30-09-2020 00:00'], cmap='Greens')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 5)
plt.title('Autumn (Oct-Nov)')
ax = sns.heatmap(df20.loc['01-10-2020 00:00':'30-11-2020 00:00'], cmap='Greens')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 6)
plt.title('Winter - 2 (Dec)')
ax = sns.heatmap(df20.loc['01-12-2020 00:00':'31-12-2020 00:00'], cmap='Greens')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplots_adjust(wspace=0.4, hspace=0.5)
plt.show()

"""•	PM2.5 values are maximum in the winter months (Jan and Dec) and early spring (Feb), and in a brief period during November.
•	The reason for the severe levels of PM2.5 in the air of Delhi NCR in the winter months is due to a weather phenomenon which results in low wind speed combined with a dip in temperature which leads to a ‘low mixing height’ and brings down the pollutants closer to ground, and seasonal crop burning in regions of Punjab and Haryana.
•	In November the severe level of PM2.5 is due to burning of firecrackers during Diwali.
•	The PM2.5 levels is much low in the summer months and even lower in monsoon months, due to rainfall, that settles the particulate matter in air.

#NO2

###Reading data
"""

df19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NO2/2019.csv')
df20 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NO2/2020.csv')

pre = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NO2/pre.csv')
during = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NO2/during.csv')
post = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NO2/post.csv')

pre_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NO2/2019_1.csv')
during_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NO2/2019_2.csv')
post_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NO2/2019_3.csv')

df19_copy = df19.copy()
df20_copy = df20.copy()

pre_copy = pre.copy()
during_copy = during.copy()
post_copy = post.copy()

pre_19_copy = pre_19.copy()
during_19_copy = during_19.copy()
post_19_copy = post_19.copy()

df19.index = df19['Date']
df20.index = df20['Date']
del df19['Date']
del df20['Date']

pre.index = pre['Date']
post.index = post['Date']
during.index = during['Date']
del pre['Date']
del post['Date']
del during['Date']

pre_19.index = pre_19['Date']
post_19.index = post_19['Date']
during_19.index = during_19['Date']
del pre_19['Date']
del post_19['Date']
del during_19['Date']

df19.head()

df20.head()

"""###Yearly - General Trend"""

plt.style.use("seaborn")
df19.plot(figsize=(25,10), linewidth = 2)
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.title('2019 - All Stations Yearly Data')
plt.legend(bbox_to_anchor=[1, 1.1])
plt.show()

df20.plot(figsize=(25,10), linewidth = 2)
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.legend(bbox_to_anchor=[1, 1.1])
plt.title('2020 - All Stations Yearly Data')
plt.show()

"""The values of PM2.5 concentration in air ranges from 0 to about 700.
For most of the stations in 2019, the values are at their minimum in the months of July to September, and has reached their maximum in the months of January, October, November and December.
In 2020, the months of March to June recorded comparitively lesser PM2.5 values than 2019, that can be accounted for an effect of the Covid lockdown.
In both years, there is a steep rise in PM2.5 value during Diwali, which was on 27 October 2019 and 14 November 2020.

###2019 vs 2020 - Phasewise
"""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('Pre Covid - Jan to March')
ax1.plot(pre_19.index, pre_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=45, labelsize=10)
ax2.plot(pre.index, pre, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""The trends of the pre covid period in 2020 and the same period in 2019 show no significant difference."""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('During Lockdown - March to May')
ax1.plot(during_19.index, during_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=45, labelsize=10)
ax2.plot(during.index, during, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""During the lockdown period, the PM2.5 values have dropped significantly. Concentration that reached 150-200 in 2019, stayed below 80-100 in the same days of 2020. Values in 2019 have reached 300, but in 2020, all stations except 3 have strictly stayed below the range of 150, which is a significant improvement."""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('Post Lockdown - June to Dec')
ax1.plot(post_19.index, post_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=90, labelsize=7)
ax2.plot(post.index, post, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=90, labelsize=7)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""•	Post lockdown, till the month of September in 2020, the PM2.5 values have been lesser than the values of the same days of 2019.
•	From October, there is a steep rise in PM2.5 figures, and we can infer that the effect of lockdown wore out beyond that. October onwards, we see the same trend in 2019 and 2020 values.
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,10))
fig.suptitle('2020')
ax1.plot(pre_19.index, pre_19, linewidth = 1)
ax1.set_title('Pre Covid - Jan to March')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=90, labelsize=9)

ax2.plot(during.index, during, linewidth = 1)
ax2.set_title('During Lockdown - March to May')
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=90, labelsize=9)

ax3.plot(post.index, post, linewidth = 1)
ax3.set_title('Post Lockdown - June to Dec')
ax3.set_xlabel("Date")
ax3.set_ylabel("Pollution level")
ax3.tick_params(labelrotation=90, labelsize=7)
plt.subplots_adjust(wspace=0.4, hspace=1.2)

"""•	In the pre-Covid days of 2020, the maximum values recorded almost touched 500. During lockdown, the values mostly stayed below 150. Post lockdown, the values stayed below 150 till September, then eventually rose after that and touched 700 in October.

###Areawise Analysis of Stations
"""

df19_copy['Date'] = df19_copy['Date'].apply(pd.Timestamp)
df20_copy['Date'] = df20_copy['Date'].apply(pd.Timestamp)
during_copy['Date'] = during_copy['Date'].apply(pd.Timestamp)
post_copy['Date'] = post_copy['Date'].apply(pd.Timestamp)

industrial = ['Alipur','Bawana','Jahangirpuri','Mundka','Najafgarh','Narela','Okhla Phase-2','Shadipur','Patparganj','Wazirpur']
residential = ['Anand Vihar','Ashok Vihar','Aya Nagar','Dwarka-Sector 8','IHBAS, Dilshad Garden','Nehru Nagar','Punjabi Bagh','R K Puram','Rohini','Vivek Vihar']
roads = ['Burari Crossing','CRRI Mathura Road','ITO','Lodhi Road','Mandir Marg','Pusa','Sri Aurobindo Marg']
others = ['Dr. Karni Singh Shooting Range','DTU','IGI Airport (T3)','Jawaharlal Nehru Stadium','Major Dhyan Chand National Stadium','North Campus, DU','NSIT Dwarka','Sirifort','Sonia Vihar']

"""#####Different areas during lockdown"""

fig, (ax1, ax2, ax3, ax4) = plt.subplots(4, figsize = (25,30))
fig.suptitle('Pollution levels in different areas During Lockdown', y=0.9)

for station in industrial:
  ax1.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Industrial Areas')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('Residential Areas')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax3.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Areas near Roads')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax4.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax4.set_title('Other Areas')
ax4.set_xlabel("Date")
ax4.set_ylabel("Pollution level")
ax4.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax4.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.2, hspace=0.4)

"""•	The overall PM2.5 levels have stayed uniformly low across all regions during lockdown (strictly below 150, except one or two exceptions), which is a remarkable improvement.

#####Industrial areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on Industrial areas', y=0.91)

for station in industrial:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Industrial areas', y=0.91)

for station in industrial:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in industrial:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	In industrial areas, the concentration of PM2.5 in air had almost halved during the days of lockdown, as compared to the same days of 2019.
•	For most of the lockdown period, the values stayed below 110, and for a brief period rose up to 170. Whereas for the same period in 2019, most of the values had exceeded 150 and even briefly reached 300.
•	In the post lockdown period of 2020, there is no significant difference in PM2.5 levels of the same period of 2019.

#####Residential areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on Residential areas', y=0.91)

for station in residential:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Residential areas', y=0.91)

for station in residential:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in residential:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	During lockdown in residential areas, the PM2.5 values were comparatively lesser than that period of 2019, but compared to other areas, the values were not significantly lower as expected.
•	Post lockdown too, the trends of PM2.5 concentration is mostly similar as 2019.

#####Areas near roads
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on areas near roads', y=0.91)

for station in roads:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Areas near Roads', y=0.91)

for station in roads:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in roads:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	For all stations located near roads, except ITO, the values had halved during lockdown as compared to 2019.
•	Post lockdown, the trends returned to the expected pattern as per 2019.

#####Other areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on other areas', y=0.91)

for station in others:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Other areas', y=0.91)

for station in others:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in others:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	For other areas, which include educational institutions and campuses, the airport, a water treatment plant, stadiums, etc. the values had halved during lockdown, as compared to that period of 2019.
•	Post lockdown, there isn’t much difference.

###Monthly Analysis

Mean
"""

df19_monthly_mean = df19_copy.set_index('Date').resample('M').mean()
df20_monthly_mean = df20_copy.set_index('Date').resample('M').mean()
during_monthly_mean = during_copy.set_index('Date').resample('M').mean()
post_monthly_mean = post_copy.set_index('Date').resample('M').mean()

df19_monthly_mean

df20_monthly_mean

plt.figure(figsize=(25,10))
for station in residential:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='orange', s=100)
for station in others:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='yellow', s=100)
for station in industrial:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='red', s=70)
for station in roads:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='black', s=70)

for station in residential:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x',color='orange', s=50)
for station in others:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='yellow', s=40)
for station in industrial:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='red', s=40)
for station in roads:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='black', s=40)  

i = mlines.Line2D([], [], color='red', marker='o', ls='', label='industrial')
re = mlines.Line2D([], [], color='orange', marker='o', ls='', label='residential')
ro = mlines.Line2D([], [], color='black', marker='o', ls='', label='roads')
o = mlines.Line2D([], [], color='yellow', marker='o', ls='', label='others')
plt.legend(handles=[i, re, ro, o], bbox_to_anchor=(0.3,1))
plt.title('Monthly Mean Values of Stations')
plt.xlabel('Months')
plt.ylabel('Pollution Level')
plt.show()

"""•	From the monthly mean values of 2019 and 2020, it is seen that January, October, November, December recorded very high PM2.5 concentrations. The rest of the months recorded comparatively lesser values, June, July and August recording the lowest.
•	The months of March to August recorded lesser PM2.5 values in 2020 than 2019.
•	In each month, higher PM2.5 concentrations were recorded in industrial areas than areas near roads and the areas in others category.

###Analysis of Maximum and Minimum Months
"""

df19_monthly_max = df19_copy.set_index('Date').resample('M').max()
df20_monthly_max = df20_copy.set_index('Date').resample('M').max()

df19_monthly_min = df19_copy.set_index('Date').resample('M').min()
df20_monthly_min = df20_copy.set_index('Date').resample('M').min()

df19_monthly_min['Mean'] = df19_monthly_min.mean(axis=1)
df19_monthly_max['Mean'] = df19_monthly_max.mean(axis=1)

df20_monthly_min['Mean'] = df20_monthly_min.mean(axis=1)
df20_monthly_max['Mean'] = df20_monthly_max.mean(axis=1)

df20_monthly_max.head()

df20_monthly_min.head()

fig, (ax1, ax2) = plt.subplots(2, figsize = (15,10))

colors1 = ['orange' if (s < max(df20_monthly_max['Mean'])) else 'red' for s in df20_monthly_max['Mean']]
colors2 = ['dodgerblue' if (s > min(df20_monthly_min['Mean'])) else 'silver' for s in df20_monthly_min['Mean']]

ax1.bar(df20_monthly_max.index, df20_monthly_max['Mean'], width=20, color=colors1)
ax1.bar(df19_monthly_max.index, df19_monthly_max['Mean'], width=20, color='orange')
ax1.set_xlabel('Months')
ax1.set_title('Maximum Range')
ax1.set_ylabel('Pollution level')

ax2.bar(df20_monthly_min.index, df20_monthly_min['Mean'], width=20, color=colors2)
ax2.bar(df19_monthly_min.index, df19_monthly_min['Mean'], width=20, color='dodgerblue')
ax2.set_xlabel('Months')
ax2.set_title('Minimum Range')
ax2.set_ylabel('Pollution level')

plt.subplots_adjust(wspace=0.2, hspace=0.4)
plt.show()

"""•	The maximum PM2.5 values recorded was in the month of September in 2020. The months September, October, November all recorded high PM2.5 concentrations.
•	The months June, July, August recorded comparatively less PM2.5 values with August recording minimum.
"""

max_20 = df20.loc['01-10-2020 00:00':'30-11-2020 00:00']
min_20 = df20.loc['01-07-2020 00:00':'31-08-2020 00:00']

plt.figure(figsize = (15,10))
ax = sns.heatmap(max_20, cmap='RdYlGn_r', robust=True, fmt='0.1f', 
                 annot=True, linewidths=0.1, annot_kws={'size':7})
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize=8)
plt.title('Oct-Nov 2020', fontdict={'fontsize':18}, pad=14)
plt.show()

plt.figure(figsize = (15,10))
ax = sns.heatmap(min_20, cmap='RdYlGn_r', robust=True, fmt='0.1f', 
                 annot=True, linewidths=0.1, annot_kws={'size':7})
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize=8)
plt.title('Jul-Aug 2020', fontdict={'fontsize':18}, pad=14)
plt.show()

"""###Seasonwise Analysis"""

plt.figure(figsize=(20,10))
plt.suptitle('NO2', size=15)

plt.subplot(2, 3, 1)
plt.title('Winter - 1 (Jan)')
ax = sns.heatmap(df20.loc['01-01-2020 00:00':'31-01-2020 00:00'], cmap='YlGn')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 2)
plt.title('Spring (Feb-Mar)')
ax = sns.heatmap(df20.loc['01-02-2020 00:00':'31-03-2020 00:00'], cmap='YlGn')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 3)
plt.title('Summer (Apr-Jun)')
ax = sns.heatmap(df20.loc['01-04-2020 00:00':'30-06-2020 00:00'], cmap='YlGn')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 4)
plt.title('Monsoon (Jul-Sep)')
ax = sns.heatmap(df20.loc['01-07-2020 00:00':'30-09-2020 00:00'], cmap='YlGn')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 5)
plt.title('Autumn (Oct-Nov)')
ax = sns.heatmap(df20.loc['01-10-2020 00:00':'30-11-2020 00:00'], cmap='YlGn')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 6)
plt.title('Winter - 2 (Dec)')
ax = sns.heatmap(df20.loc['01-12-2020 00:00':'31-12-2020 00:00'], cmap='YlGn')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplots_adjust(wspace=0.4, hspace=0.5)
plt.show()

"""•	PM2.5 values are maximum in the winter months (Jan and Dec) and early spring (Feb), and in a brief period during November.
•	The reason for the severe levels of PM2.5 in the air of Delhi NCR in the winter months is due to a weather phenomenon which results in low wind speed combined with a dip in temperature which leads to a ‘low mixing height’ and brings down the pollutants closer to ground, and seasonal crop burning in regions of Punjab and Haryana.
•	In November the severe level of PM2.5 is due to burning of firecrackers during Diwali.
•	The PM2.5 levels is much low in the summer months and even lower in monsoon months, due to rainfall, that settles the particulate matter in air.

#CO

###Reading data
"""

df19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/CO/2019.csv')
df20 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/CO/2020.csv')

pre = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/CO/pre.csv')
during = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/CO/during.csv')
post = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/CO/post.csv')

pre_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/CO/2019_1.csv')
during_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/CO/2019_2.csv')
post_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/CO/2019_3.csv')

df19_copy = df19.copy()
df20_copy = df20.copy()

pre_copy = pre.copy()
during_copy = during.copy()
post_copy = post.copy()

pre_19_copy = pre_19.copy()
during_19_copy = during_19.copy()
post_19_copy = post_19.copy()

df19.index = df19['Date']
df20.index = df20['Date']
del df19['Date']
del df20['Date']

pre.index = pre['Date']
post.index = post['Date']
during.index = during['Date']
del pre['Date']
del post['Date']
del during['Date']

pre_19.index = pre_19['Date']
post_19.index = post_19['Date']
during_19.index = during_19['Date']
del pre_19['Date']
del post_19['Date']
del during_19['Date']

df19.head()

df20.head()

"""###Yearly - General Trend"""

plt.style.use("fivethirtyeight")
df19.plot(figsize=(25,10), linewidth = 2)
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.title('2019 - All Stations Yearly Data')
plt.legend(bbox_to_anchor=[1, 1.1])
plt.show()

df20.plot(figsize=(25,10), linewidth = 2)
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.legend(bbox_to_anchor=[1, 1.1])
plt.title('2020 - All Stations Yearly Data')
plt.show()

"""The values of PM2.5 concentration in air ranges from 0 to about 700.
For most of the stations in 2019, the values are at their minimum in the months of July to September, and has reached their maximum in the months of January, October, November and December.
In 2020, the months of March to June recorded comparitively lesser PM2.5 values than 2019, that can be accounted for an effect of the Covid lockdown.
In both years, there is a steep rise in PM2.5 value during Diwali, which was on 27 October 2019 and 14 November 2020.

###2019 vs 2020 - Phasewise
"""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('Pre Covid - Jan to March')
ax1.plot(pre_19.index, pre_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=45, labelsize=10)
ax2.plot(pre.index, pre, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""The trends of the pre covid period in 2020 and the same period in 2019 show no significant difference."""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('During Lockdown - March to May')
ax1.plot(during_19.index, during_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=45, labelsize=10)
ax2.plot(during.index, during, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""During the lockdown period, the PM2.5 values have dropped significantly. Concentration that reached 150-200 in 2019, stayed below 80-100 in the same days of 2020. Values in 2019 have reached 300, but in 2020, all stations except 3 have strictly stayed below the range of 150, which is a significant improvement."""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('Post Lockdown - June to Dec')
ax1.plot(post_19.index, post_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=90, labelsize=7)
ax2.plot(post.index, post, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=90, labelsize=7)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""•	Post lockdown, till the month of September in 2020, the PM2.5 values have been lesser than the values of the same days of 2019.
•	From October, there is a steep rise in PM2.5 figures, and we can infer that the effect of lockdown wore out beyond that. October onwards, we see the same trend in 2019 and 2020 values.
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,10))
fig.suptitle('2020')
ax1.plot(pre_19.index, pre_19, linewidth = 1)
ax1.set_title('Pre Covid - Jan to March')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=90, labelsize=9)

ax2.plot(during.index, during, linewidth = 1)
ax2.set_title('During Lockdown - March to May')
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=90, labelsize=9)

ax3.plot(post.index, post, linewidth = 1)
ax3.set_title('Post Lockdown - June to Dec')
ax3.set_xlabel("Date")
ax3.set_ylabel("Pollution level")
ax3.tick_params(labelrotation=90, labelsize=7)
plt.subplots_adjust(wspace=0.4, hspace=1.2)

"""•	In the pre-Covid days of 2020, the maximum values recorded almost touched 500. During lockdown, the values mostly stayed below 150. Post lockdown, the values stayed below 150 till September, then eventually rose after that and touched 700 in October.

###Areawise Analysis of Stations
"""

df19_copy['Date'] = df19_copy['Date'].apply(pd.Timestamp)
df20_copy['Date'] = df20_copy['Date'].apply(pd.Timestamp)
during_copy['Date'] = during_copy['Date'].apply(pd.Timestamp)
post_copy['Date'] = post_copy['Date'].apply(pd.Timestamp)

industrial = ['Alipur','Bawana','Jahangirpuri','Mundka','Najafgarh','Narela','Okhla Phase-2','Shadipur','Patparganj','Wazirpur']
residential = ['Anand Vihar','Ashok Vihar','Aya Nagar','Dwarka-Sector 8','IHBAS, Dilshad Garden','Nehru Nagar','Punjabi Bagh','R K Puram','Rohini','Vivek Vihar']
roads = ['Burari Crossing','CRRI Mathura Road','ITO','Lodhi Road','Mandir Marg','Pusa','Sri Aurobindo Marg']
others = ['Dr. Karni Singh Shooting Range','DTU','IGI Airport (T3)','Jawaharlal Nehru Stadium','Major Dhyan Chand National Stadium','North Campus, DU','NSIT Dwarka','Sirifort','Sonia Vihar']

"""#####Different areas during lockdown"""

fig, (ax1, ax2, ax3, ax4) = plt.subplots(4, figsize = (25,30))
fig.suptitle('Pollution levels in different areas During Lockdown', y=0.9)

for station in industrial:
  ax1.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Industrial Areas')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('Residential Areas')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax3.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Areas near Roads')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax4.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax4.set_title('Other Areas')
ax4.set_xlabel("Date")
ax4.set_ylabel("Pollution level")
ax4.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax4.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.2, hspace=0.4)

"""•	The overall PM2.5 levels have stayed uniformly low across all regions during lockdown (strictly below 150, except one or two exceptions), which is a remarkable improvement.

#####Industrial areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on Industrial areas', y=0.91)

for station in industrial:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Industrial areas', y=0.91)

for station in industrial:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in industrial:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	In industrial areas, the concentration of PM2.5 in air had almost halved during the days of lockdown, as compared to the same days of 2019.
•	For most of the lockdown period, the values stayed below 110, and for a brief period rose up to 170. Whereas for the same period in 2019, most of the values had exceeded 150 and even briefly reached 300.
•	In the post lockdown period of 2020, there is no significant difference in PM2.5 levels of the same period of 2019.

#####Residential areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on Residential areas', y=0.91)

for station in residential:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Residential areas', y=0.91)

for station in residential:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in residential:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	During lockdown in residential areas, the PM2.5 values were comparatively lesser than that period of 2019, but compared to other areas, the values were not significantly lower as expected.
•	Post lockdown too, the trends of PM2.5 concentration is mostly similar as 2019.

#####Areas near roads
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on areas near roads', y=0.91)

for station in roads:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Areas near Roads', y=0.91)

for station in roads:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in roads:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	For all stations located near roads, except ITO, the values had halved during lockdown as compared to 2019.
•	Post lockdown, the trends returned to the expected pattern as per 2019.

#####Other areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on other areas', y=0.91)

for station in others:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Other areas', y=0.91)

for station in others:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in others:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	For other areas, which include educational institutions and campuses, the airport, a water treatment plant, stadiums, etc. the values had halved during lockdown, as compared to that period of 2019.
•	Post lockdown, there isn’t much difference.

###Monthly Analysis

Mean
"""

df19_monthly_mean = df19_copy.set_index('Date').resample('M').mean()
df20_monthly_mean = df20_copy.set_index('Date').resample('M').mean()
during_monthly_mean = during_copy.set_index('Date').resample('M').mean()
post_monthly_mean = post_copy.set_index('Date').resample('M').mean()

df19_monthly_mean

df20_monthly_mean

plt.figure(figsize=(25,10))
for station in residential:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='orange', s=100)
for station in others:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='yellow', s=100)
for station in industrial:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='red', s=70)
for station in roads:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='black', s=70)

for station in residential:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x',color='orange', s=50)
for station in others:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='yellow', s=40)
for station in industrial:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='red', s=40)
for station in roads:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='black', s=40)  

i = mlines.Line2D([], [], color='red', marker='o', ls='', label='industrial')
re = mlines.Line2D([], [], color='orange', marker='o', ls='', label='residential')
ro = mlines.Line2D([], [], color='black', marker='o', ls='', label='roads')
o = mlines.Line2D([], [], color='yellow', marker='o', ls='', label='others')
plt.legend(handles=[i, re, ro, o], bbox_to_anchor=(0.3,1))
plt.title('Monthly Mean Values of Stations')
plt.xlabel('Months')
plt.ylabel('Pollution Level')
plt.show()

"""•	From the monthly mean values of 2019 and 2020, it is seen that January, October, November, December recorded very high PM2.5 concentrations. The rest of the months recorded comparatively lesser values, June, July and August recording the lowest.
•	The months of March to August recorded lesser PM2.5 values in 2020 than 2019.
•	In each month, higher PM2.5 concentrations were recorded in industrial areas than areas near roads and the areas in others category.

###Analysis of Maximum and Minimum Months
"""

df19_monthly_max = df19_copy.set_index('Date').resample('M').max()
df20_monthly_max = df20_copy.set_index('Date').resample('M').max()

df19_monthly_min = df19_copy.set_index('Date').resample('M').min()
df20_monthly_min = df20_copy.set_index('Date').resample('M').min()

df19_monthly_min['Mean'] = df19_monthly_min.mean(axis=1)
df19_monthly_max['Mean'] = df19_monthly_max.mean(axis=1)

df20_monthly_min['Mean'] = df20_monthly_min.mean(axis=1)
df20_monthly_max['Mean'] = df20_monthly_max.mean(axis=1)

df20_monthly_max.head()

df20_monthly_min.head()

fig, (ax1, ax2) = plt.subplots(2, figsize = (15,10))

colors1 = ['orange' if (s < max(df20_monthly_max['Mean'])) else 'red' for s in df20_monthly_max['Mean']]
colors2 = ['dodgerblue' if (s > min(df20_monthly_min['Mean'])) else 'silver' for s in df20_monthly_min['Mean']]

ax1.bar(df20_monthly_max.index, df20_monthly_max['Mean'], width=20, color=colors1)
ax1.bar(df19_monthly_max.index, df19_monthly_max['Mean'], width=20, color='orange')
ax1.set_xlabel('Months')
ax1.set_title('Maximum Range')
ax1.set_ylabel('Pollution level')

ax2.bar(df20_monthly_min.index, df20_monthly_min['Mean'], width=20, color=colors2)
ax2.bar(df19_monthly_min.index, df19_monthly_min['Mean'], width=20, color='dodgerblue')
ax2.set_xlabel('Months')
ax2.set_title('Minimum Range')
ax2.set_ylabel('Pollution level')

plt.subplots_adjust(wspace=0.2, hspace=0.4)
plt.show()

"""•	The maximum PM2.5 values recorded was in the month of September in 2020. The months September, October, November all recorded high PM2.5 concentrations.
•	The months June, July, August recorded comparatively less PM2.5 values with August recording minimum.
"""

max_20 = df20.loc['01-10-2020 00:00':'30-11-2020 00:00']
min_20 = df20.loc['01-07-2020 00:00':'31-08-2020 00:00']

plt.figure(figsize = (15,10))
ax = sns.heatmap(max_20, cmap='RdYlGn_r', robust=True, fmt='0.1f', 
                 annot=True, linewidths=0.1, annot_kws={'size':7})
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize=8)
plt.title('Oct-Nov 2020', fontdict={'fontsize':18}, pad=14)
plt.show()

plt.figure(figsize = (15,10))
ax = sns.heatmap(min_20, cmap='RdYlGn_r', robust=True, fmt='0.1f', 
                 annot=True, linewidths=0.1, annot_kws={'size':7})
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize=8)
plt.title('Jul-Aug 2020', fontdict={'fontsize':18}, pad=14)
plt.show()

"""###Seasonwise Analysis"""

plt.figure(figsize=(20,10))
plt.suptitle('CO', size=15)

plt.subplot(2, 3, 1)
plt.title('Winter - 1 (Jan)')
ax = sns.heatmap(df20.loc['01-01-2020 00:00':'31-01-2020 00:00'], cmap='YlGnBu')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 2)
plt.title('Spring (Feb-Mar)')
ax = sns.heatmap(df20.loc['01-02-2020 00:00':'31-03-2020 00:00'], cmap='YlGnBu')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 3)
plt.title('Summer (Apr-Jun)')
ax = sns.heatmap(df20.loc['01-04-2020 00:00':'30-06-2020 00:00'], cmap='YlGnBu')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 4)
plt.title('Monsoon (Jul-Sep)')
ax = sns.heatmap(df20.loc['01-07-2020 00:00':'30-09-2020 00:00'], cmap='YlGnBu')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 5)
plt.title('Autumn (Oct-Nov)')
ax = sns.heatmap(df20.loc['01-10-2020 00:00':'30-11-2020 00:00'], cmap='YlGnBu')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 6)
plt.title('Winter - 2 (Dec)')
ax = sns.heatmap(df20.loc['01-12-2020 00:00':'31-12-2020 00:00'], cmap='YlGnBu')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplots_adjust(wspace=0.4, hspace=0.5)
plt.show()

"""•	PM2.5 values are maximum in the winter months (Jan and Dec) and early spring (Feb), and in a brief period during November.
•	The reason for the severe levels of PM2.5 in the air of Delhi NCR in the winter months is due to a weather phenomenon which results in low wind speed combined with a dip in temperature which leads to a ‘low mixing height’ and brings down the pollutants closer to ground, and seasonal crop burning in regions of Punjab and Haryana.
•	In November the severe level of PM2.5 is due to burning of firecrackers during Diwali.
•	The PM2.5 levels is much low in the summer months and even lower in monsoon months, due to rainfall, that settles the particulate matter in air.

#Ozone

###Reading data
"""

df19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/2019.csv')
df20 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/2020.csv')

pre = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/pre.csv')
during = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/during.csv')
post = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/post.csv')

pre_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/2019_1.csv')
during_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/2019_2.csv')
post_19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/PM2.5/2019_3.csv')

df19_copy = df19.copy()
df20_copy = df20.copy()

pre_copy = pre.copy()
during_copy = during.copy()
post_copy = post.copy()

pre_19_copy = pre_19.copy()
during_19_copy = during_19.copy()
post_19_copy = post_19.copy()

df19.index = df19['Date']
df20.index = df20['Date']
del df19['Date']
del df20['Date']

pre.index = pre['Date']
post.index = post['Date']
during.index = during['Date']
del pre['Date']
del post['Date']
del during['Date']

pre_19.index = pre_19['Date']
post_19.index = post_19['Date']
during_19.index = during_19['Date']
del pre_19['Date']
del post_19['Date']
del during_19['Date']

df19.head()

df20.head()

"""###Yearly - General Trend"""

plt.style.use("fivethirtyeight")
df19.plot(figsize=(25,10), linewidth = 2)
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.title('2019 - All Stations Yearly Data')
plt.legend(bbox_to_anchor=[1, 1.1])
plt.show()

df20.plot(figsize=(25,10), linewidth = 2)
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.legend(bbox_to_anchor=[1, 1.1])
plt.title('2020 - All Stations Yearly Data')
plt.show()

"""The values of PM2.5 concentration in air ranges from 0 to about 700.
For most of the stations in 2019, the values are at their minimum in the months of July to September, and has reached their maximum in the months of January, October, November and December.
In 2020, the months of March to June recorded comparitively lesser PM2.5 values than 2019, that can be accounted for an effect of the Covid lockdown.
In both years, there is a steep rise in PM2.5 value during Diwali, which was on 27 October 2019 and 14 November 2020.

###2019 vs 2020 - Phasewise
"""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('Pre Covid - Jan to March')
ax1.plot(pre_19.index, pre_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=45, labelsize=10)
ax2.plot(pre.index, pre, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""The trends of the pre covid period in 2020 and the same period in 2019 show no significant difference."""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('During Lockdown - March to May')
ax1.plot(during_19.index, during_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=45, labelsize=10)
ax2.plot(during.index, during, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""During the lockdown period, the PM2.5 values have dropped significantly. Concentration that reached 150-200 in 2019, stayed below 80-100 in the same days of 2020. Values in 2019 have reached 300, but in 2020, all stations except 3 have strictly stayed below the range of 150, which is a significant improvement."""

fig, (ax1, ax2) = plt.subplots(2, figsize = (25,10))
fig.suptitle('Post Lockdown - June to Dec')
ax1.plot(post_19.index, post_19, linewidth = 1)
ax1.set_title('2019')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=90, labelsize=7)
ax2.plot(post.index, post, linewidth = 1)
ax2.set_title('2020')
ax2.set_xlabel("Date")
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=90, labelsize=7)
plt.subplots_adjust(wspace=0.4, hspace=0.5)

"""•	Post lockdown, till the month of September in 2020, the PM2.5 values have been lesser than the values of the same days of 2019.
•	From October, there is a steep rise in PM2.5 figures, and we can infer that the effect of lockdown wore out beyond that. October onwards, we see the same trend in 2019 and 2020 values.
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,10))
fig.suptitle('2020')
ax1.plot(pre_19.index, pre_19, linewidth = 1)
ax1.set_title('Pre Covid - Jan to March')
ax1.set_ylabel("Pollution level")
ax1.tick_params(labelrotation=90, labelsize=9)

ax2.plot(during.index, during, linewidth = 1)
ax2.set_title('During Lockdown - March to May')
ax2.set_ylabel("Pollution level")
ax2.tick_params(labelrotation=90, labelsize=9)

ax3.plot(post.index, post, linewidth = 1)
ax3.set_title('Post Lockdown - June to Dec')
ax3.set_xlabel("Date")
ax3.set_ylabel("Pollution level")
ax3.tick_params(labelrotation=90, labelsize=7)
plt.subplots_adjust(wspace=0.4, hspace=1.2)

"""•	In the pre-Covid days of 2020, the maximum values recorded almost touched 500. During lockdown, the values mostly stayed below 150. Post lockdown, the values stayed below 150 till September, then eventually rose after that and touched 700 in October.

###Areawise Analysis of Stations
"""

df19_copy['Date'] = df19_copy['Date'].apply(pd.Timestamp)
df20_copy['Date'] = df20_copy['Date'].apply(pd.Timestamp)
during_copy['Date'] = during_copy['Date'].apply(pd.Timestamp)
post_copy['Date'] = post_copy['Date'].apply(pd.Timestamp)

industrial = ['Alipur','Bawana','Jahangirpuri','Mundka','Najafgarh','Narela','Okhla Phase-2','Shadipur','Patparganj','Wazirpur']
residential = ['Anand Vihar','Ashok Vihar','Aya Nagar','Dwarka-Sector 8','IHBAS, Dilshad Garden','Nehru Nagar','Punjabi Bagh','R K Puram','Rohini','Vivek Vihar']
roads = ['Burari Crossing','CRRI Mathura Road','ITO','Lodhi Road','Mandir Marg','Pusa','Sri Aurobindo Marg']
others = ['Dr. Karni Singh Shooting Range','DTU','IGI Airport (T3)','Jawaharlal Nehru Stadium','Major Dhyan Chand National Stadium','North Campus, DU','NSIT Dwarka','Sirifort','Sonia Vihar']

"""#####Different areas during lockdown"""

fig, (ax1, ax2, ax3, ax4) = plt.subplots(4, figsize = (25,30))
fig.suptitle('Pollution levels in different areas During Lockdown', y=0.9)

for station in industrial:
  ax1.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Industrial Areas')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('Residential Areas')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax3.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Areas near Roads')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax4.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax4.set_title('Other Areas')
ax4.set_xlabel("Date")
ax4.set_ylabel("Pollution level")
ax4.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax4.tick_params(labelrotation=45, labelsize=10)
plt.subplots_adjust(wspace=0.2, hspace=0.4)

"""•	The overall PM2.5 levels have stayed uniformly low across all regions during lockdown (strictly below 150, except one or two exceptions), which is a remarkable improvement.

#####Industrial areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on Industrial areas', y=0.91)

for station in industrial:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Industrial areas', y=0.91)

for station in industrial:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in industrial:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in industrial:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	In industrial areas, the concentration of PM2.5 in air had almost halved during the days of lockdown, as compared to the same days of 2019.
•	For most of the lockdown period, the values stayed below 110, and for a brief period rose up to 170. Whereas for the same period in 2019, most of the values had exceeded 150 and even briefly reached 300.
•	In the post lockdown period of 2020, there is no significant difference in PM2.5 levels of the same period of 2019.

#####Residential areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on Residential areas', y=0.91)

for station in residential:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Residential areas', y=0.91)

for station in residential:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in residential:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in residential:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	During lockdown in residential areas, the PM2.5 values were comparatively lesser than that period of 2019, but compared to other areas, the values were not significantly lower as expected.
•	Post lockdown too, the trends of PM2.5 concentration is mostly similar as 2019.

#####Areas near roads
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on areas near roads', y=0.91)

for station in roads:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Areas near Roads', y=0.91)

for station in roads:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in roads:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in roads:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	For all stations located near roads, except ITO, the values had halved during lockdown as compared to 2019.
•	Post lockdown, the trends returned to the expected pattern as per 2019.

#####Other areas
"""

fig, (ax1, ax2, ax3) = plt.subplots(3, figsize = (25,20))
fig.suptitle('Effect of lockdown on other areas', y=0.91)

for station in others:
  ax1.plot(pre.index, pre[station], linewidth = 1, marker = 'o', label = station)
ax1.set_title('Pre Covid')
ax1.set_ylabel("Pollution level")
ax1.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax1.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax2.plot(during.index, during[station], linewidth = 1, marker = 'o', label = station)
ax2.set_title('During Lockdown')
ax2.set_ylabel("Pollution level")
ax2.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax2.tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax3.plot(post.index, post[station], linewidth = 1, marker = 'o', label = station)
ax3.set_title('Post Lockdown')
ax3.set_ylabel("Pollution level")
ax3.legend(bbox_to_anchor = (1, 1), fontsize=10)
ax3.tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.2, hspace=0.4)

fig, ax = plt.subplots(2, 2, figsize = (25,10))
fig.suptitle('2019 vs 2020 - Other areas', y=0.91)

for station in others:
  ax[0,0].plot(during_19.index, during_19[station], linewidth = 1, marker = '.', label = station)
ax[0,0].set_title('March to May 2019')
ax[0,0].set_ylabel("Pollution level")
ax[0,0].set_xlabel("Date")
ax[0,0].set_xticklabels([])
ax[0,0].legend(fontsize=8)
ax[0,0].tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax[0,1].plot(during.index, during[station], linewidth = 1, marker = '.', label = station)
ax[0,1].set_title('March to May 2020 (During Lockdown)')
ax[0,1].set_ylabel("Pollution level")
ax[0,1].set_xlabel("Date")
ax[0,1].set_xticklabels([])
ax[0,1].legend(fontsize=8)
ax[0,1].tick_params(labelrotation=45, labelsize=10)

for station in others:
  ax[1,0].plot(post_19.index, post_19[station], linewidth = 1, marker = '.', label = station)
ax[1,0].set_title('Jun to Dec 2019')
ax[1,0].set_ylabel("Pollution level")
ax[1,0].set_xlabel("Date")
ax[1,0].set_xticklabels([])
ax[1,0].legend(fontsize=8)
ax[1,0].tick_params(labelrotation=90, labelsize=6)

for station in others:
  ax[1,1].plot(post.index, post[station], linewidth = 1, marker = '.', label = station)
ax[1,1].set_title('Jun to Dec 2020 (Post Lockdown)')
ax[1,1].set_ylabel("Pollution level")
ax[1,1].set_xlabel("Date")
ax[1,1].set_xticklabels([])
ax[1,1].legend(fontsize=8)
ax[1,1].tick_params(labelrotation=90, labelsize=6)

plt.subplots_adjust(wspace=0.05, hspace=0.2)

"""•	For other areas, which include educational institutions and campuses, the airport, a water treatment plant, stadiums, etc. the values had halved during lockdown, as compared to that period of 2019.
•	Post lockdown, there isn’t much difference.

###Monthly Analysis

Mean
"""

df19_monthly_mean = df19_copy.set_index('Date').resample('M').mean()
df20_monthly_mean = df20_copy.set_index('Date').resample('M').mean()
during_monthly_mean = during_copy.set_index('Date').resample('M').mean()
post_monthly_mean = post_copy.set_index('Date').resample('M').mean()

df19_monthly_mean

df20_monthly_mean

plt.figure(figsize=(25,10))
for station in residential:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='orange', s=100)
for station in others:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='yellow', s=100)
for station in industrial:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='red', s=70)
for station in roads:
  plt.scatter(df20_monthly_mean.index, df20_monthly_mean[station], color='black', s=70)

for station in residential:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x',color='orange', s=50)
for station in others:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='yellow', s=40)
for station in industrial:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='red', s=40)
for station in roads:
  plt.scatter(df19_monthly_mean.index, df19_monthly_mean[station], marker = 'x', color='black', s=40)  

i = mlines.Line2D([], [], color='red', marker='o', ls='', label='industrial')
re = mlines.Line2D([], [], color='orange', marker='o', ls='', label='residential')
ro = mlines.Line2D([], [], color='black', marker='o', ls='', label='roads')
o = mlines.Line2D([], [], color='yellow', marker='o', ls='', label='others')
plt.legend(handles=[i, re, ro, o], bbox_to_anchor=(0.3,1))
plt.title('Monthly Mean Values of Stations')
plt.xlabel('Months')
plt.ylabel('Pollution Level')
plt.show()

"""•	From the monthly mean values of 2019 and 2020, it is seen that January, October, November, December recorded very high PM2.5 concentrations. The rest of the months recorded comparatively lesser values, June, July and August recording the lowest.
•	The months of March to August recorded lesser PM2.5 values in 2020 than 2019.
•	In each month, higher PM2.5 concentrations were recorded in industrial areas than areas near roads and the areas in others category.

###Analysis of Maximum and Minimum Months
"""

df19_monthly_max = df19_copy.set_index('Date').resample('M').max()
df20_monthly_max = df20_copy.set_index('Date').resample('M').max()

df19_monthly_min = df19_copy.set_index('Date').resample('M').min()
df20_monthly_min = df20_copy.set_index('Date').resample('M').min()

df19_monthly_min['Mean'] = df19_monthly_min.mean(axis=1)
df19_monthly_max['Mean'] = df19_monthly_max.mean(axis=1)

df20_monthly_min['Mean'] = df20_monthly_min.mean(axis=1)
df20_monthly_max['Mean'] = df20_monthly_max.mean(axis=1)

df20_monthly_max.head()

df20_monthly_min.head()

fig, (ax1, ax2) = plt.subplots(2, figsize = (15,10))

colors1 = ['orange' if (s < max(df20_monthly_max['Mean'])) else 'red' for s in df20_monthly_max['Mean']]
colors2 = ['dodgerblue' if (s > min(df20_monthly_min['Mean'])) else 'silver' for s in df20_monthly_min['Mean']]

ax1.bar(df20_monthly_max.index, df20_monthly_max['Mean'], width=20, color=colors1)
ax1.bar(df19_monthly_max.index, df19_monthly_max['Mean'], width=20, color='orange')
ax1.set_xlabel('Months')
ax1.set_title('Maximum Range')
ax1.set_ylabel('Pollution level')

ax2.bar(df20_monthly_min.index, df20_monthly_min['Mean'], width=20, color=colors2)
ax2.bar(df19_monthly_min.index, df19_monthly_min['Mean'], width=20, color='dodgerblue')
ax2.set_xlabel('Months')
ax2.set_title('Minimum Range')
ax2.set_ylabel('Pollution level')

plt.subplots_adjust(wspace=0.2, hspace=0.4)
plt.show()

"""•	The maximum PM2.5 values recorded was in the month of September in 2020. The months September, October, November all recorded high PM2.5 concentrations.
•	The months June, July, August recorded comparatively less PM2.5 values with August recording minimum.
"""

max_20 = df20.loc['01-10-2020 00:00':'30-11-2020 00:00']
min_20 = df20.loc['01-07-2020 00:00':'31-08-2020 00:00']

plt.figure(figsize = (15,10))
ax = sns.heatmap(max_20, cmap='RdYlGn_r', robust=True, fmt='0.1f', 
                 annot=True, linewidths=0.1, annot_kws={'size':7})
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize=8)
plt.title('Oct-Nov 2020', fontdict={'fontsize':18}, pad=14)
plt.show()

plt.figure(figsize = (15,10))
ax = sns.heatmap(min_20, cmap='RdYlGn_r', robust=True, fmt='0.1f', 
                 annot=True, linewidths=0.1, annot_kws={'size':7})
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize=8)
plt.title('Jul-Aug 2020', fontdict={'fontsize':18}, pad=14)
plt.show()

"""###Seasonwise Analysis"""

plt.figure(figsize=(20,10))
plt.suptitle('Ozone', size=15)

plt.subplot(2, 3, 1)
plt.title('Winter - 1 (Jan)')
ax = sns.heatmap(df20.loc['01-01-2020 00:00':'31-01-2020 00:00'], cmap='Oranges')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 2)
plt.title('Spring (Feb-Mar)')
ax = sns.heatmap(df20.loc['01-02-2020 00:00':'31-03-2020 00:00'], cmap='Oranges')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 3)
plt.title('Summer (Apr-Jun)')
ax = sns.heatmap(df20.loc['01-04-2020 00:00':'30-06-2020 00:00'], cmap='Oranges')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 4)
plt.title('Monsoon (Jul-Sep)')
ax = sns.heatmap(df20.loc['01-07-2020 00:00':'30-09-2020 00:00'], cmap='Oranges')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 5)
plt.title('Autumn (Oct-Nov)')
ax = sns.heatmap(df20.loc['01-10-2020 00:00':'30-11-2020 00:00'], cmap='Oranges')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplot(2, 3, 6)
plt.title('Winter - 2 (Dec)')
ax = sns.heatmap(df20.loc['01-12-2020 00:00':'31-12-2020 00:00'], cmap='Oranges')
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels([])
plt.xlabel('Stations')

plt.subplots_adjust(wspace=0.4, hspace=0.5)
plt.show()

"""•	PM2.5 values are maximum in the winter months (Jan and Dec) and early spring (Feb), and in a brief period during November.
•	The reason for the severe levels of PM2.5 in the air of Delhi NCR in the winter months is due to a weather phenomenon which results in low wind speed combined with a dip in temperature which leads to a ‘low mixing height’ and brings down the pollutants closer to ground, and seasonal crop burning in regions of Punjab and Haryana.
•	In November the severe level of PM2.5 is due to burning of firecrackers during Diwali.
•	The PM2.5 levels is much low in the summer months and even lower in monsoon months, due to rainfall, that settles the particulate matter in air.

#NH3
"""

df19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NH3/2019.csv')
df20 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NH3/2020.csv')

pre = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NH3/pre.csv')
during = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NH3/during.csv')
post = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/NH3/post.csv')

df19.plot(figsize=(25,10), linewidth = 2)
plt.axhline(y = 400, color = 'g', linestyle = '-')
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.legend(bbox_to_anchor=[1, 1.1])
plt.title('2019 - All Stations Yearly Data')
plt.show()

df20.plot(figsize=(25,10), linewidth = 2)
plt.axhline(y = 400, color = 'g', linestyle = '-')
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.legend(bbox_to_anchor=[1, 1.1])
plt.title('2020 - All Stations Yearly Data')
plt.show()

"""The concentration of NH3 in air is strictly below the safe threshold (400) across 2 years. So it is not considered in the analysis.

#SO2
"""

df19 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/SO2/2019.csv')
df20 = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/SO2/2020.csv')

pre = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/SO2/pre.csv')
during = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/SO2/during.csv')
post = pd.read_csv('/content/gdrive/MyDrive/Covid Pollutants Analysis/SO2/post.csv')

df19.plot(figsize=(25,10), linewidth = 2)
plt.axhline(y = 80, color = 'g', linestyle = '-')
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.legend(bbox_to_anchor=[1, 1.1])
plt.title('2019 - All Stations Yearly Data')
plt.show()

df20.plot(figsize=(25,10), linewidth = 2)
plt.axhline(y = 80, color = 'g', linestyle = '-')
plt.xlabel("Date")
plt.ylabel("Pollutant Values")
plt.legend(bbox_to_anchor=[1, 1.1])
plt.title('2020 - All Stations Yearly Data')
plt.show()

"""The concentration of SO2 in air is below the safe threshold (80) across 2 years data, except only 2 stations. So it is not considered in the analysis."""